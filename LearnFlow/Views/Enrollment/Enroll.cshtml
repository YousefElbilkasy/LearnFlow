@using LearnFlow.ViewModel
@{
    ViewData["Title"] = "Enroll";
}

@model EnrollViewModel

<h2 class="text-center" style ="color:white">Enroll in Course</h2>

<hr />
<div class="row justify-content-center">
    <div class="col-md-8">
        <form asp-action="Enroll" method="post" id="enrollForm" class="bg-light p-4 rounded shadow-sm">
            <div asp-validation-summary="All" class="text-danger"></div>
            
            <div class="form-group">
                <label asp-for="FullName" class="control-label"></label>
                <input asp-for="FullName" class="form-control" placeholder="Enter your full name" />
                <span asp-validation-for="FullName" class="text-danger"></span>
            </div>
            
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" placeholder="Enter your email" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            
            <div class="form-group">
                <label asp-for="PhoneNumber" class="control-label"></label>
                <input asp-for="PhoneNumber" class="form-control" placeholder="Enter your phone number" />
                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
            </div>
            
            <div class="form-group">
                <label asp-for="Course.Title" class="control-label"></label>
                <input asp-for="Course.Title" class="form-control" readonly />
                <img src="@Model.Course.ImageUrl" alt="@Model.Course.Title" class="img-fluid mt-2 rounded" />
            </div>
            
            <div class="form-group">
                <label asp-for="Course.Description" class="control-label"></label>
                <p class="form-control-plaintext">@Model.Course.Description</p>
                
                <label asp-for="Course.Price" class="control-label"></label>
                <p class="form-control-plaintext h5">$@Model.Course.Price</p>
            </div>
            
            <div class="form-group d-none">
                <!-- Hidden fields for Course properties -->
                <input type="hidden" asp-for="Course.CourseId" />
                <input type="hidden" asp-for="Course.CreationDate" />
                <input type="hidden" asp-for="Course.ImageUrl" />
                <input type="hidden" asp-for="Course.InstructorId" />
                <input type="hidden" asp-for="Course.Price" />
                <input type="hidden" asp-for="Course.Description" />
            </div>
            
            <!-- Modify the button to trigger PayPal on click -->
            <button type="button" id="enrollNowButton" class="btn btn-primary btn-lg btn-block">Enroll Now</button>
            
            <!-- PayPal Button Placeholder -->
            <div id="paypal-button-container" class="mt-3"></div>
        </form>
    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    
    
    <script src="https://www.paypal.com/sdk/js?client-id=AaWafLf9jAW5g2JfxF3wktmh2rfUma4WMnJXmr83OjiB2P3lzSVcvK7DSZg-TGn4CQP-09btscvlf1q4&currency=USD&intent=capture"></script>
    
    <script>
        var sessionValue = parseFloat('@Model.Course.Price').toFixed(2); // Ensure two decimal points

        // Handle the "Enroll Now" button click
        document.getElementById("enrollNowButton").addEventListener("click", function() {
            if (sessionValue == "0.00") {
                // If the course is free, submit the form directly
                document.getElementById("enrollForm").submit();
            } else {
                // If there is a cost, initialize and render the PayPal button
                paypal.Buttons({
                    createOrder: function(data, actions) {
                        // Set up the transaction
                        return actions.order.create({
                            purchase_units: [{
                                amount: {
                                    value: sessionValue // Total amount for the transaction
                                }
                            }]
                        });
                    },
                    onApprove: function(data, actions) {
                        // Capture the transaction once approved
                        return actions.order.capture().then(function(details) {
                            console.log('Transaction completed by ' + details.payer.name.given_name);

                            // Automatically submit the enrollment form after successful payment
                            document.getElementById("enrollForm").submit();
                        });
                    },
                    onError: function(err) {
                        console.error('Error during payment:', err);
                        alert('There was an issue processing your payment. Please try again.');
                    }
                }).render("#paypal-button-container");
            }
        });
    </script>
}
